# generated by datamodel-codegen:
#   filename:  rtcToolsConfig.json
#   timestamp: 2022-09-27T13:06:58+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Extra, Field

from ... import (
    RtcInputReferenceEnumStringType,
    RtcTimeSeriesSimpleType,
    XsBoolean,
    XsDouble,
    XsString,
)


class Field1(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _id: XsString = Field(..., alias='@id')
    _selectingColumnId: Optional[XsString] = Field(None, alias='@selectingColumnId')


class Field10(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field11(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field12(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field13(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field14(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field15(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field16(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field17(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _factor: Optional[XsDouble] = Field(None, alias='@factor')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field18(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _nStepSeries: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='@nStepSeries')
    _nStepSeriesStart: Optional[RtcTimeSeriesSimpleType] = Field(
        None, alias='@nStepSeriesStart'
    )
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field19(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _factor: Optional[XsDouble] = Field(None, alias='@factor')


class Field2(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field20(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field21(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field22(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field23(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field24(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field25(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field3(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field4(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field5(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')


class Field6(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _factor: Optional[XsDouble] = Field(None, alias='@factor')


class Field7(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _useAbsoluteAsSpillCap: Optional[XsBoolean] = Field(
        None, alias='@useAbsoluteAsSpillCap'
    )


class Field8(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _factor: Optional[XsDouble] = Field(None, alias='@factor')


class Field9(BaseModel):
    class Config:
        extra = Extra.forbid
        allow_population_by_field_name = True

    _: Optional[RtcTimeSeriesSimpleType] = Field(None, alias='$')
    _ref: Optional[RtcInputReferenceEnumStringType] = Field(None, alias='@ref')
