{
	"$schema": "http://json-schema.org/schema#",
	"additionalProperties": false,
	"definitions": {
		".State": {
			"$ref": "#/definitions/StateComplexType",
			"description": "A state consists of a number of locations.\n                from which FFS reads and writes the model state data.\n                A such reading is reading by the FFS and writing is writing by the FFS. "
		},
		"ArchiveTimeSeriesSetComplexType": {
			"additionalProperties": false,
			"properties": {
				"ensembleId": {
					"$ref": "#/definitions/idStringType",
					"description": "Optional field for running ensembles. Ensemble id's in a time series set will override ensemble id's defined in the workflow."
				},
				"locationId": {
					"items": {
						"$ref": "#/definitions/idStringType"
					},
					"minItems": 1,
					"type": "array"
				},
				"moduleInstanceId": {
					"$ref": "#/definitions/idStringType"
				},
				"parameterId": {
					"$ref": "#/definitions/idStringType"
				},
				"qualifierId": {
					"items": {
						"$ref": "#/definitions/idStringType",
						"description": "Id that references an qualifier listed in the regionConfigFiles/Qualifiers.xsd\n\t\t\t\t\t"
					},
					"type": "array"
				},
				"timeSeriesType": {
					"$ref": "#/definitions/timeSeriesTypeEnumStringType"
				},
				"timeStep": {
					"$ref": "#/definitions/TimeStepComplexType"
				}
			},
			"required": [
				"locationId",
				"moduleInstanceId",
				"parameterId",
				"timeSeriesType",
				"timeStep"
			],
			"type": "object"
		},
		"BoolPropertyComplexType": {
			"additionalProperties": false,
			"properties": {
				"attr_key": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_value": {
					"$ref": "#/definitions/xs:boolean"
				},
				"description": {
					"$ref": "#/definitions/xs:string"
				}
			},
			"required": [
				"attr_key",
				"attr_value"
			],
			"type": "object"
		},
		"ColumnIdsComplexType": {
			"additionalProperties": false,
			"description": "Column names for columns A through Z.",
			"properties": {
				"attr_A": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_B": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_C": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_D": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_E": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_F": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_G": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_H": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_I": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_J": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_K": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_L": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_M": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_N": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_O": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_P": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_Q": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_R": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_S": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_T": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_U": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_V": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_W": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_X": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_Y": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_Z": {
					"$ref": "#/definitions/xs:string"
				}
			},
			"required": [
				"attr_A"
			],
			"type": "object"
		},
		"ColumnMetaDataComplexType": {
			"additionalProperties": false,
			"properties": {
				"attr_A": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_B": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_C": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_D": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_E": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_F": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_G": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_H": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_I": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_J": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_K": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_L": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_M": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_N": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_O": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_P": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_Q": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_R": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_S": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_T": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_U": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_V": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_W": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_X": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_Y": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_Z": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_id": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_type": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				}
			},
			"required": [
				"attr_A"
			],
			"type": "object"
		},
		"ColumnTypesComplexType": {
			"additionalProperties": false,
			"description": "Value-types in the columns A through Z. If no type specified, type 'String' is assumed.",
			"properties": {
				"attr_A": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_B": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_C": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_D": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_E": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_F": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_G": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_H": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_I": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_J": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_K": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_L": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_M": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_N": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_O": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_P": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_Q": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_R": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_S": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_T": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_U": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_V": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_W": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_X": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_Y": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				},
				"attr_Z": {
					"$ref": "#/definitions/ValueTypeEnumStringType"
				}
			},
			"required": [
				"attr_A"
			],
			"type": "object"
		},
		"DateTimeComplexType": {
			"additionalProperties": false,
			"properties": {
				"attr_date": {
					"$ref": "#/definitions/dateType"
				},
				"attr_time": {
					"$ref": "#/definitions/timeType"
				}
			},
			"required": [
				"attr_date",
				"attr_time"
			],
			"type": "object"
		},
		"DateTimePropertyComplexType": {
			"additionalProperties": false,
			"properties": {
				"attr_date": {
					"$ref": "#/definitions/dateType"
				},
				"attr_key": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_time": {
					"$ref": "#/definitions/timeType"
				},
				"description": {
					"$ref": "#/definitions/xs:string"
				}
			},
			"required": [
				"attr_time",
				"attr_key",
				"attr_date"
			],
			"type": "object"
		},
		"DoublePropertyComplexType": {
			"additionalProperties": false,
			"properties": {
				"attr_key": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_value": {
					"$ref": "#/definitions/xs:double"
				},
				"description": {
					"$ref": "#/definitions/xs:string"
				}
			},
			"required": [
				"attr_key",
				"attr_value"
			],
			"type": "object"
		},
		"EnsembleMemberComplexType": {
			"additionalProperties": false,
			"properties": {
				"attr_index": {
					"$ref": "#/definitions/xs:nonNegativeInteger"
				},
				"attr_weight": {
					"$ref": "#/definitions/xs:double"
				}
			},
			"required": [
				"attr_index"
			],
			"type": "object"
		},
		"EnsembleMemberRangeComplexType": {
			"additionalProperties": false,
			"properties": {
				"attr_end": {
					"$ref": "#/definitions/xs:nonNegativeInteger"
				},
				"attr_start": {
					"$ref": "#/definitions/xs:nonNegativeInteger"
				},
				"attr_weight": {
					"$ref": "#/definitions/xs:double"
				}
			},
			"required": [
				"attr_start"
			],
			"type": "object"
		},
		"FloatPropertyComplexType": {
			"additionalProperties": false,
			"properties": {
				"attr_key": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_value": {
					"$ref": "#/definitions/xs:float"
				},
				"description": {
					"$ref": "#/definitions/xs:string"
				}
			},
			"required": [
				"attr_key",
				"attr_value"
			],
			"type": "object"
		},
		"GeoDatumEnumStringType": {
			"description": "The geographical datum for the location data. Presently only WGS-1984, OS 1936 and LOCAL are recognised. LOCAL indicates a local grid.",
			"enum": [
				"LOCAL",
				"WGS 1984",
				"Ordnance Survey Great Britain 1936",
				"TWD 1967",
				"Gauss Krueger Meridian2",
				"Gauss Krueger Meridian3",
				"Gauss Krueger Austria M34",
				"Gauss Krueger Austria M31",
				"Rijks Driehoekstelsel",
				"JRC",
				"DWD",
				"KNMI Radar",
				"CH1903",
				"PAK1",
				"PAK2",
				"SVY21"
			],
			"type": "string"
		},
		"GeoDatumStringType": {
			"anyOf": [
				{
					"description": "The geographical datum for the location data. Presently only WGS-1984, OS 1936 and LOCAL are recognised. LOCAL indicates a local grid.",
					"enum": [
						"LOCAL",
						"WGS 1984",
						"Ordnance Survey Great Britain 1936",
						"TWD 1967",
						"Gauss Krueger Meridian2",
						"Gauss Krueger Meridian3",
						"Gauss Krueger Austria M34",
						"Gauss Krueger Austria M31",
						"Rijks Driehoekstelsel",
						"JRC",
						"DWD",
						"KNMI Radar",
						"CH1903",
						"PAK1",
						"PAK2",
						"SVY21"
					],
					"type": "string"
				},
				{
					"pattern": "^(UTM((0[1-9])|([1-5][0-9])|(UTM60))[NS])$",
					"type": "string"
				}
			]
		},
		"GlobalTableComplexType": {
			"additionalProperties": false,
			"description": "Intended for the configuration of any table",
			"properties": {
				"columnIds": {
					"$ref": "#/definitions/ColumnIdsComplexType"
				},
				"columnMetaData": {
					"items": {
						"$ref": "#/definitions/ColumnMetaDataComplexType"
					},
					"type": "array"
				},
				"columnTypes": {
					"$ref": "#/definitions/ColumnTypesComplexType"
				},
				"columnUnits": {
					"$ref": "#/definitions/ColumnIdsComplexType"
				},
				"row": {
					"items": {
						"$ref": "#/definitions/RowComplexType"
					},
					"minItems": 1,
					"type": "array"
				}
			},
			"required": [
				"row"
			],
			"type": "object"
		},
		"IntPropertyComplexType": {
			"additionalProperties": false,
			"properties": {
				"attr_key": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_value": {
					"$ref": "#/definitions/xs:int"
				},
				"description": {
					"$ref": "#/definitions/xs:string"
				}
			},
			"required": [
				"attr_key",
				"attr_value"
			],
			"type": "object"
		},
		"LocationIdSimpleType": {
			"description": "Location ID, defined by the model",
			"type": "string"
		},
		"ParameterSimpleType": {
			"description": "Content of the data (Discharge, Precipitation, VPD); defined by the model",
			"type": "string"
		},
		"PeriodConditionComplexType": {
			"additionalProperties": false,
			"description": "A period condition. If a date is specified without a timezone, e.g. 2002-10-10T12:00:00, then it is assumed to be in UTC.",
			"properties": {
				"day": {
					"items": {
						"$ref": "#/definitions/xs:gDay",
						"description": "Day of the month such as the 5th of the month that is repeated every year\n\t\t\t\t\t\t"
					},
					"type": "array"
				},
				"endDate": {
					"$ref": "#/definitions/DateTimeComplexType",
					"description": "End date and time for this period."
				},
				"endMonthDay": {
					"$ref": "#/definitions/xs:gMonthDay",
					"description": "End month and day of this season."
				},
				"month": {
					"items": {
						"$ref": "#/definitions/xs:gMonth",
						"description": "Month that is repeated every year"
					},
					"type": "array"
				},
				"monthDay": {
					"items": {
						"$ref": "#/definitions/xs:gMonthDay",
						"description": "Day of the year (e.g. third of May) that is repeated every year"
					},
					"type": "array"
				},
				"startDate": {
					"$ref": "#/definitions/DateTimeComplexType",
					"description": "Start date and time for this period."
				},
				"startMonthDay": {
					"$ref": "#/definitions/xs:gMonthDay",
					"description": "Start month and day of this season."
				},
				"timeZone": {
					"$ref": "#/definitions/TimeZoneSimpleType",
					"description": "Timezone"
				},
				"validAfterDate": {
					"$ref": "#/definitions/DateTimeComplexType",
					"description": "Valid for entire period after this date and time."
				},
				"validBeforeDate": {
					"$ref": "#/definitions/DateTimeComplexType",
					"description": "Valid for entire period prior to this date and time."
				}
			},
			"type": "object"
		},
		"PropertiesComplexType": {
			"additionalProperties": false,
			"properties": {
				"bool": {
					"items": {
						"$ref": "#/definitions/BoolPropertyComplexType"
					},
					"type": "array"
				},
				"dateTime": {
					"items": {
						"$ref": "#/definitions/DateTimePropertyComplexType",
						"description": "Since 2014.01"
					},
					"type": "array"
				},
				"description": {
					"$ref": "#/definitions/xs:string"
				},
				"double": {
					"items": {
						"$ref": "#/definitions/DoublePropertyComplexType",
						"description": "Since 2014.01"
					},
					"type": "array"
				},
				"float": {
					"items": {
						"$ref": "#/definitions/FloatPropertyComplexType"
					},
					"type": "array"
				},
				"int": {
					"items": {
						"$ref": "#/definitions/IntPropertyComplexType"
					},
					"type": "array"
				},
				"string": {
					"items": {
						"$ref": "#/definitions/StringPropertyComplexType"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"RowComplexType": {
			"additionalProperties": false,
			"description": "Values in the columns A through Z. The values are entered as strings, however the value-type in each column should match the type as specified with columnTypes for this column. This wil be checked while reading the xml-file. If no column-type specified, 'String' type is assumed.",
			"properties": {
				"attr_A": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_B": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_C": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_D": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_E": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_F": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_G": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_H": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_I": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_J": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_K": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_L": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_M": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_N": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_O": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_P": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_Q": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_R": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_S": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_T": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_U": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_V": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_W": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_X": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_Y": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_Z": {
					"$ref": "#/definitions/xs:string"
				}
			},
			"required": [
				"attr_A"
			],
			"type": "object"
		},
		"StateComplexType": {
			"additionalProperties": false,
			"description": "A state consists of a number of locations.\n                from which FFS reads and writes the model state data.\n                A such reading is reading by the FFS and writing is writing by the FFS. ",
			"properties": {
				"attr_version": {
					"$ref": "#/definitions/versionString"
				},
				"comment": {
					"$ref": "#/definitions/commentString",
					"description": "use this field as a notebook to add comments, suggestions\n                        description of data entered etc."
				},
				"dateTime": {
					"$ref": "#/definitions/DateTimeComplexType",
					"description": "date and time this state is valid for/was taken"
				},
				"stateId": {
					"$ref": "#/definitions/idString",
					"description": "id of this state, defined by the module"
				},
				"stateLoc": {
					"items": {
						"$ref": "#/definitions/StateReadWriteDirectoryComplexType",
						"description": "Each state location consists of a read and a write location.\n                        The type attribute indicates whether this points to a file or a directory."
					},
					"minItems": 1,
					"type": "array"
				},
				"stateName": {
					"$ref": "#/definitions/nameString",
					"description": "optional descriptive name of this state"
				},
				"timeZone": {
					"$ref": "#/definitions/TimeZoneSimpleType",
					"description": "the time zone of the pi input files is assumed when the time zone in a pi output file is missing"
				}
			},
			"required": [
				"stateId",
				"stateLoc",
				"attr_version"
			],
			"type": "object"
		},
		"StateReadWriteDirectoryComplexType": {
			"additionalProperties": false,
			"description": "Each state location consists of a read and a write location.\n                The type attribute indicates whether this points to a file or a directory.",
			"properties": {
				"attr_type": {
					"enum": [
						"file",
						"directory"
					],
					"type": "string"
				},
				"readLocation": {
					"$ref": "#/definitions/xs:anyURI",
					"description": "The name of the input state of the model. The write location is imported by the general adapter. This imported file is renamed to the read location internally"
				},
				"writeLocation": {
					"$ref": "#/definitions/xs:anyURI",
					"description": "The name of the output state of the model. The write location is imported by the general adapter. This imported file is renamed to the read location internally"
				}
			},
			"required": [
				"readLocation",
				"writeLocation",
				"attr_type"
			],
			"type": "object"
		},
		"StringPropertyComplexType": {
			"additionalProperties": false,
			"properties": {
				"attr_key": {
					"$ref": "#/definitions/xs:string"
				},
				"attr_value": {
					"$ref": "#/definitions/xs:string"
				},
				"description": {
					"$ref": "#/definitions/xs:string"
				}
			},
			"required": [
				"attr_key",
				"attr_value"
			],
			"type": "object"
		},
		"TimeStepComplexType": {
			"additionalProperties": false,
			"description": "The time unit element has three attributes, unit and divider and multiplier. the unit is second, minute, hour, week, month year. The divider attribute is optional (default = 1).",
			"properties": {
				"attr_divider": {
					"$ref": "#/definitions/xs:positiveInteger"
				},
				"attr_multiplier": {
					"$ref": "#/definitions/xs:nonNegativeInteger"
				},
				"attr_unit": {
					"$ref": "#/definitions/timeStepUnitEnumStringType"
				}
			},
			"required": [
				"attr_unit"
			],
			"type": "object"
		},
		"TimeStepUnitComplexType": {
			"additionalProperties": false,
			"description": "The time unit element has two attributes, unit and divider. the unit is required and can be 1, 2, 3, or 4 meaning: year, month, day and hour. The divider attribute is optional (default = 1).",
			"properties": {
				"attr_divider": {
					"$ref": "#/definitions/xs:int"
				},
				"attr_unit": {
					"enum": [
						1,
						2,
						3,
						4
					],
					"maximum": 2147483647,
					"minimum": -2147483648,
					"type": "integer"
				}
			},
			"required": [
				"attr_unit"
			],
			"type": "object"
		},
		"TimeZoneSimpleType": {
			"description": "The timeZone (in decimal hours shift from GMT) e.g. -1.0 or 3.5. If not present the default timezone configured in the general adapter or import module is used. Always written when exported from FEWS",
			"type": "number"
		},
		"UtmGeoDatumStringType": {
			"pattern": "^(UTM((0[1-9])|([1-5][0-9])|(UTM60))[NS])$",
			"type": "string"
		},
		"ValueTypeEnumStringType": {
			"enum": [
				"boolean",
				"int",
				"float",
				"double",
				"string"
			],
			"type": "string"
		},
		"booleanStringType": {
			"anyOf": [
				{
					"type": "boolean"
				},
				{
					"pattern": "^([\\w\\D]*[@][\\w\\D]*)$",
					"type": "string"
				}
			],
			"description": " \n\t\t\t\tBoolean that allows (global) properties\n\t\t\t"
		},
		"commentString": {
			"type": "string"
		},
		"dateType": {
			"pattern": "^([\\d][\\d][\\d][\\d]\\-[\\d][\\d]\\-[\\d][\\d])$",
			"type": "string"
		},
		"doubleStringType": {
			"anyOf": [
				{
					"type": "number"
				},
				{
					"pattern": "^([\\w\\D]*[@][\\w\\D]*)$",
					"type": "string"
				}
			],
			"description": "\n\t\t\t\tDouble that allows use of location attributes\n\t\t\t"
		},
		"eventCodeString": {
			"pattern": "^(\\^\\:)$",
			"type": "string"
		},
		"idString": {
			"type": "string"
		},
		"idStringType": {
			"maxLength": 64,
			"minLength": 1,
			"type": "string"
		},
		"intStringType": {
			"anyOf": [
				{
					"maximum": 2147483647,
					"minimum": -2147483648,
					"type": "integer"
				},
				{
					"pattern": "^([\\w\\D]*[@][\\w\\D]*)$",
					"type": "string"
				}
			],
			"description": "\n\t\t\t\tInteger that allows (global) properties\n\t\t\t"
		},
		"nameString": {
			"type": "string"
		},
		"nonEmptyStringType": {
			"minLength": 1,
			"type": "string"
		},
		"propertyReferenceString": {
			"pattern": "^([\\w\\D]*[@][\\w\\D]*)$",
			"type": "string"
		},
		"timeSeriesType": {
			"description": "Type of data, either accumulative or instantaneous. For accumulative data the time/date of the event is the moment at which the data was gathered.\n\t\t\t",
			"enum": [
				"accumulative",
				"instantaneous",
				"mean"
			],
			"type": "string"
		},
		"timeSeriesTypeEnumStringType": {
			"enum": [
				"external historical",
				"external forecasting",
				"simulated historical",
				"simulated forecasting",
				"temporary"
			],
			"type": "string"
		},
		"timeStepUnitEnumStringType": {
			"enum": [
				"second",
				"minute",
				"hour",
				"day",
				"week",
				"month",
				"year",
				"nonequidistant"
			],
			"type": "string"
		},
		"timeType": {
			"pattern": "^([\\d][\\d]\\:[\\d][\\d]\\:[\\d][\\d])$",
			"type": "string"
		},
		"versionString": {
			"enum": [
				"1.2",
				"1.3",
				"1.4",
				"1.5",
				"1.6",
				"1.7",
				"1.8",
				"1.9",
				"1.10",
				"1.11",
				"1.12",
				"1.13",
				"1.14"
			],
			"type": "string"
		},
		"xs:anyURI": {
			"type": "string"
		},
		"xs:boolean": {
			"type": "boolean"
		},
		"xs:double": {
			"type": "number"
		},
		"xs:float": {
			"type": "number"
		},
		"xs:gDay": {
			"type": "string"
		},
		"xs:gMonth": {
			"type": "string"
		},
		"xs:gMonthDay": {
			"type": "string"
		},
		"xs:int": {
			"maximum": 2147483647,
			"minimum": -2147483648,
			"type": "integer"
		},
		"xs:nonNegativeInteger": {
			"minimum": 0,
			"type": "integer"
		},
		"xs:positiveInteger": {
			"minimum": 1,
			"type": "integer"
		},
		"xs:string": {
			"type": "string"
		}
	},
	"description": "JSON Schema generated by XMLSpy v2019 rel. 3 sp1 (x64) (http://www.altova.com)",
	"properties": {
		"attr_xmlns": {
			"default": "http://www.wldelft.nl/fews/PI"
		},
		"attr_xmlns:xs": {
			"default": "http://www.w3.org/2001/XMLSchema"
		},
		"State": {
			"$ref": "#/definitions/.State"
		}
	},
	"type": "object"
}