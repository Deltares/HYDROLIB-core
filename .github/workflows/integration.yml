name: fm_container

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  CI:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-18.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.8

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull image from DockerHub
        run: docker pull deltares/delft3dfm

      - name: Run only integration test to generate input
        run: poetry run pytest -m docker

      - name: Run image in container
        run: docker run  -v $(pwd)/tests/data/output/docker:/data deltares/delft3dfm /opt/delft3dfm_latest/lnx64/bin/run_dimr.sh
